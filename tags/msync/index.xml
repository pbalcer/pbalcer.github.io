<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>msync on PMem.io</title><link>https://pmem.io/tags/msync/</link><description>Recent content in msync on PMem.io</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://pmem.io/tags/msync/index.xml" rel="self" type="application/rss+xml"/><item><title>Why msync() is less optimal for persistent memory</title><link>https://pmem.io/knowledgebase/development/100000025-why-msync-is-less-optimal-for-persistent-memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/development/100000025-why-msync-is-less-optimal-for-persistent-memory/</guid><description>From the msync(2) man page:
msync() flushes changes made to the in-core copy of a file that was mapped into memory using mmap(2) back to the filesystem. Without use of this call, there is no guarantee that changes are written back before munmap(2) is called. To be more precise, the part of the file that corresponds to the memory area starting at addr and having length length is updated.
So why is msync() not primarily used to flush dirty pages to persistent memory?</description></item></channel></rss>