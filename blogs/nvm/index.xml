<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nvm on PMem.io</title><link>https://pmem.io/blogs/nvm/</link><description>Recent content in nvm on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 01 Sep 2014 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/nvm/index.xml" rel="self" type="application/rss+xml"/><item><title>NVM Library Overview</title><link>https://pmem.io/blog/2014/09/nvm-library-overview/</link><pubDate>Mon, 01 Sep 2014 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2014/09/nvm-library-overview/</guid><description>[Edit on 2017-12-11: In the years since this entry was written, this work has evolved into PMDK.] Why are we building an NVM Library? Where does it live? How does it work? This blog entry provides some answers, which refer to this picture showing the overall library architecture:
Why? The operating system exposes persistent memory to applications as a memory-mapped file, using a persistent memory aware file system as shown in the picture.</description></item></channel></rss>