<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blocks on PMem.io</title><link>https://pmem.io/blogs/blocks/</link><description>Recent content in blocks on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 26 Nov 2018 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/blocks/index.xml" rel="self" type="application/rss+xml"/><item><title>Bad blocks</title><link>https://pmem.io/blog/2018/11/bad-blocks/</link><pubDate>Mon, 26 Nov 2018 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2018/11/bad-blocks/</guid><description>Introduction Over time, storage devices can acquire uncorrectable media errors often called &amp;ldquo;bad blocks&amp;rdquo;. A bad block is a part of a storage media that is either inaccessible or unwritable due to a permanent physical damage. In case of memory mapped I/O, if a process tries to access (read or write) the corrupted block, it will be terminated by the SIGBUS signal.
Handling bad blocks in PMDK libraries PMDK libraries can handle bad blocks if the CHECK_BAD_BLOCKS compat feature is turned on.</description></item></channel></rss>