<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance on PMem.io</title><link>https://pmem.io/blogs/performance/</link><description>Recent content in performance on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 15 Dec 2015 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance improvements</title><link>https://pmem.io/blog/2015/12/performance-improvements/</link><pubDate>Tue, 15 Dec 2015 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2015/12/performance-improvements/</guid><description>I would like to inform you about the performance improvements that have been going on in PMDK and libpmemobj in particular. We have not been standing still and we are trying out a couple of ideas on how to make our libraries even faster. Some of the improvements are smaller, some are larger. Some of them have already made it to the master branch and some are just ideas on how to rework the internals of libpmemobj to make it even faster.</description></item></channel></rss>