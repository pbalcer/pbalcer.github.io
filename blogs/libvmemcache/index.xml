<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>libvmemcache on PMem.io</title><link>https://pmem.io/blogs/libvmemcache/</link><description>Recent content in libvmemcache on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 12 Jun 2019 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/libvmemcache/index.xml" rel="self" type="application/rss+xml"/><item><title>Multi-level vmemcache</title><link>https://pmem.io/blog/2019/06/multi-level-vmemcache/</link><pubDate>Wed, 12 Jun 2019 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2019/06/multi-level-vmemcache/</guid><description>Introduction vmemcache which we have recently described performs close to optimum when either all keys are approximately equally likely to be queried, or when all key:value pairs fit completely into the fastest form of memory you are willing to use. But, in many workloads, some keys are “hot” and queried over and over again, while the rest, “cold”, may comfortably reside on slower medium. This calls for multiple linked instances of vmemcache, each residing in a different tier.</description></item><item><title>libvmemcache - buffer-based LRU cache</title><link>https://pmem.io/blog/2019/05/libvmemcache-buffer-based-lru-cache/</link><pubDate>Tue, 07 May 2019 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2019/05/libvmemcache-buffer-based-lru-cache/</guid><description>Introduction libvmemcache is a volatile key-value store optimized for operating on NVDIMM based space. However, it can work with any filesystem whether it is stored in memory (tmpfs) or on any storage device. Consequently, libvmemcache will be significantly less performant if it is stored on the storage device other than NVDIMMs.
libvmemcache is an embeddable and lightweight in-memory caching solution. It is designed to fully take advantage of large capacity memory, such as persistent memory with DAX through memory mapping in an efficient and scalable way.</description></item></channel></rss>