<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pmemcheck on PMem.io</title><link>https://pmem.io/blogs/pmemcheck/</link><description>Recent content in pmemcheck on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 20 Jul 2015 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/pmemcheck/index.xml" rel="self" type="application/rss+xml"/><item><title>An introduction to pmemcheck (part 2) - transactions</title><link>https://pmem.io/blog/2015/07/an-introduction-to-pmemcheck-part-2-transactions/</link><pubDate>Mon, 20 Jul 2015 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2015/07/an-introduction-to-pmemcheck-part-2-transactions/</guid><description>In my previous blog post I described the key features of the new persistent memory analysis tool we created - pmemcheck. You should now be aware of the main pitfalls of persistent memory programming and of ways pmemcheck informs you about possible misuses of PMEM. We should now dive into a more general approach of using persistent memory in a failsafe manner - transactions. This shouldn&amp;rsquo;t be an alien concept for anybody who had anything to do with databases.</description></item><item><title>An introduction to pmemcheck (part 1) - basics</title><link>https://pmem.io/blog/2015/07/an-introduction-to-pmemcheck-part-1-basics/</link><pubDate>Fri, 17 Jul 2015 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2015/07/an-introduction-to-pmemcheck-part-1-basics/</guid><description>As you probably noticed from the previous posts, persistent memory programming isn&amp;rsquo;t really that easy. There are a couple of things you have to consider - data consistency being the most important one. The contemporary x86_64 architecture supports at most 8-byte atomic stores. You probably know by now, that by atomic I mean non-torn and not thread-safe. This means that you can be confident that you will not get 4 out of the 8 bytes with the new value and the rest will not be updated.</description></item></channel></rss>