<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>translation on PMem.io</title><link>https://pmem.io/blogs/translation/</link><description>Recent content in translation on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 23 Sep 2014 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/translation/index.xml" rel="self" type="application/rss+xml"/><item><title>Using the Block Translation Table for sector atomicity</title><link>https://pmem.io/blog/2014/09/using-the-block-translation-table-for-sector-atomicity/</link><pubDate>Tue, 23 Sep 2014 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2014/09/using-the-block-translation-table-for-sector-atomicity/</guid><description>Persistent memory based storage is able to perform IO at byte (or more accurately, cache line) granularity. However, we often want to expose such storage as traditional block devices. The block drivers for persistent memory will do exactly this. However, they do not provide any atomicity guarantees. Traditional SSDs typically provide protection against torn sectors in hardware, using stored energy in capacitors to complete in-flight block writes, or perhaps in firmware.</description></item></channel></rss>