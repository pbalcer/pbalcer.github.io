<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>replication on PMem.io</title><link>https://pmem.io/blogs/replication/</link><description>Recent content in replication on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 23 Nov 2015 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/replication/index.xml" rel="self" type="application/rss+xml"/><item><title>An introduction to replication</title><link>https://pmem.io/blog/2015/11/an-introduction-to-replication/</link><pubDate>Mon, 23 Nov 2015 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2015/11/an-introduction-to-replication/</guid><description>Replication is a means for raising the reliability of your pmemobj based applications. You can basically think of it as RAID 1 within PMDK. What happens is, when you write to your pool using the pmemobj_* (memcpy, persist, and so on) primitives, it gets copied to your replicas. Yes, you can have more than one replica. In fact you can have as many as you want, but you have to keep in mind the performance penalty.</description></item></channel></rss>