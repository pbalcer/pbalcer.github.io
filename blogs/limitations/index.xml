<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>limitations on PMem.io</title><link>https://pmem.io/blogs/limitations/</link><description>Recent content in limitations on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 04 Oct 2019 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/limitations/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ standard limitations and Persistent Memory</title><link>https://pmem.io/blog/2019/10/c-standard-limitations-and-persistent-memory/</link><pubDate>Fri, 04 Oct 2019 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2019/10/c-standard-limitations-and-persistent-memory/</guid><description>Introduction C++ language restrictions and the persistent memory programming paradigm imply serious restrictions on objects which may be stored on persistent medium. A user can access persistent memory with memory mapped files to take advantage of its byte addressability thanks to libpmemobj and Storage Networking Industry Association non-volatile memory programming model. No serialization takes place here, thus applications must be able to read and modify directly from the medium even after application was closed and reopened or after the event of power loss.</description></item></channel></rss>