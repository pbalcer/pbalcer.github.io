<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cpp on PMem.io</title><link>https://pmem.io/blogs/cpp/</link><description>Recent content in cpp on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 20 Feb 2019 19:55:17 -0700</lastBuildDate><atom:link href="https://pmem.io/blogs/cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ persistent containers - vector</title><link>https://pmem.io/blog/2019/02/c-persistent-containers-vector/</link><pubDate>Wed, 20 Feb 2019 19:55:17 -0700</pubDate><guid>https://pmem.io/blog/2019/02/c-persistent-containers-vector/</guid><description>[Note: pmem::obj::vector&amp;lt;&amp;gt; is no longer experimental. The rest of the information in this blog post is still accurate.] Introduction The main idea behind pmem containers is to fully exploit persistent memory potential by designing optimized on-media layouts and algorithms for persistent memory programming. On November, we published a blog post about pmem containers. If you havenâ€™t read it yet, I encourage you to do that now.
We have recently added pmem::obj:experimental:vector container to libpmemobj-cpp library.</description></item></channel></rss>