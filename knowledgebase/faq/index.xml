<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FAQ | PMDK Knowledge Base on PMem.io</title><link>https://pmem.io/knowledgebase/faq/</link><description>Recent content in FAQ | PMDK Knowledge Base on PMem.io</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://pmem.io/knowledgebase/faq/index.xml" rel="self" type="application/rss+xml"/><item><title>Can I install persistent memory and a GPU in my system?</title><link>https://pmem.io/knowledgebase/faq/100000003-can-i-install-persistent-memory-and-a-gpu-in-my-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000003-can-i-install-persistent-memory-and-a-gpu-in-my-system/</guid><description>Applies To Intel® Optane™ Persistent Memory NVDIMM-N GPU Answer It is recommended to seek advice from the server OEM/ODM directly. While it is possible to support GPUs and persistent memory in the same system, several factors need to be considered which include, but are not limited to the following:
Server size (1U, 2U, 4U, etc) Power Supplies Internal and external cooling functions - Air cooled, liquid cooled, or hybrid The type and quantity of persistent memory modules or devices within the system with their power &amp;amp; thermal requirements The make and model of the GPU with its power and cooling requirements</description></item><item><title>Can I install persistent memory and an FPGA in my system?</title><link>https://pmem.io/knowledgebase/faq/100000004-can-i-install-persistent-memory-and-an-fpga-in-my-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000004-can-i-install-persistent-memory-and-an-fpga-in-my-system/</guid><description>Applies To Intel® Optane™ Persistent Memory NVDIMM-N FPGA Answer It is recommended to seek advice from the server OEM/ODM directly. While it is possible to support FPGAs and persistent memory in the same system, several factors need to be considered which include, but are not limited to the following:
Server size (1U, 2U, 4U, etc) Power Supplies Internal and external cooling functions - Air cooled, liquid cooled, or hybrid The type and quantity of persistent memory modules or devices within the system with their power &amp;amp; thermal requirements The make, model, and quantity of the FPGAs with its power and cooling requirements</description></item><item><title>Intel Optane Persistent Memory Operating System Support Matrix</title><link>https://pmem.io/knowledgebase/faq/100000006-intel-optane-persistent-memory-operating-system-support-matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000006-intel-optane-persistent-memory-operating-system-support-matrix/</guid><description>Applies To Intel® Optane™ Persistent Memory Linux Microsoft Windows VMWare Compatible Operating Systems for Intel® Optane™ Persistent Memory Intel® Optane™ persistent memory operating system (OS) mode support information.
The operating systems listed below have been verified by Intel and do not reflect the OS vendor support. Please contact the respective OS vendor(s) for the exact release version providing the proper support.. For OS that are not listed, use open source code to generate necessary files.</description></item><item><title>What is Direct-Access (DAX)?</title><link>https://pmem.io/knowledgebase/faq/100000008-what-is-dax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000008-what-is-dax/</guid><description>Applies To Microsoft Windows Linux Answer Direct Access (DAX) enables direct access to files stored in persistent memory or on a block device. Without DAX support in a file system, the page cache is generally used to buffer reads and writes to files, and requires an extra copy operation.
DAX removes the extra copy operation by performing reads and writes directly to the storage device. It is also used to provide the pages that are mapped into a user space by a call to mmap.</description></item><item><title>What is PMDK (Persistent Memory Development Kit)?</title><link>https://pmem.io/knowledgebase/faq/100000009-what-is-pmdk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000009-what-is-pmdk/</guid><description>Answer The Persistent Memory Development Kit (PMDK), formerly known as the Non-Volatile Memory Library (NVML), is a collection of libraries and tools designed to support development of persistent-memory-aware applications. The open source PMDK project currently supports ten libraries, which are targeted at various use cases for persistent memory with language support for C, C++, Java*, and Python*. The PMDK also includes tools like the pmemcheck plug-in for the open source toolset, valgrind, and an increasing body of documentation, code examples, tutorials, and blog entries.</description></item><item><title>What is the SNIA NVM Programming Model?</title><link>https://pmem.io/knowledgebase/faq/100000007-what-is-the-snia-nvm-programming-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000007-what-is-the-snia-nvm-programming-model/</guid><description>Answer This Storage Networking Industry Association (SNIA) Non-Volatile Memory (NVM) Programming model was jointly developed between ~50 industry leading companies to address the ongoing proliferation of new non-volatile memory (otherwise known as persistent memory) functionality and new NVM technologies. An extensible NVM Programming Model is necessary to enable an industry wide community of NVM producers and consumers to move forward together through a number of significant storage and memory system architecture changes.</description></item><item><title>What programming languages does PMDK (Persistent Memory Development Kit) support?</title><link>https://pmem.io/knowledgebase/faq/100000011-what-languages-does-pmdk-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000011-what-languages-does-pmdk-support/</guid><description>Answer The Persistent Memory Development Kit (PMDK) core libraries provide C APIs. Libraries such as libpmemobj provide C++ APIs. Higher level libraries such as libpmemkv, a key-value store for persistent memory, support C, C++, Javascript, Java, Ruby, and Python.</description></item><item><title>Why use PMDK (Persistent Memory Development Kit)?</title><link>https://pmem.io/knowledgebase/faq/100000010-why-use-pmdk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pmem.io/knowledgebase/faq/100000010-why-use-pmdk/</guid><description>Answer The Persistent Memory Development Kit (PMDK) is designed to solve persistent memory challenges and facilitate the adoption of persistent memory programming. It offers developers well-tested, production-ready libraries and tools in a comprehensive implementation of the Storage Networking Industry Association Non-Volatile Memory (SNIA NVM) programming model.</description></item></channel></rss>